This chapter lists the most common error messages that can be returned when running a Glyph command. It does not aim to be an exhaustive list, especially if you =>[#extending|extended] Glyph by creating your own macros or you're embedding Ruby code using the %>[ruby] macro.

tip[As a general rule, more diagnostic information is provided if Glyph is run in =>[#debug_switch|debug mode].]

section[header[Generic Errors]

error_table[
ref_error[Incorrect macro syntax|
This error is returned if the parsing of the document (or one of its included files) failed. In 99% of the cases, this means there is an extra or missing macro delimiter somewhere.
]
ref_error[Invalid alias: macro '_macro-name_' already exists|
The alias name supplied to the @macro_alias@ method has already been used for another macro or alias.
]
ref_error[Undefined macro '_macro-name_'|
The document contains a macro that does not exist, i.e. it is not a standard or used-defined =>[#macro_ref|Glyph macro or alias].
]
ref_error[An error occurred when generating _file-name_.pdf|
Returned if Prince could not generate the PDF file or if Prince is not installed. Normally, Prince provides additional details on the specific error(s).
]
ref_error[Glyph cannot generate PDF. Please specify a valid tools.pdf_generator setting|
Returned if the $>[tools.pdf_generator] has not be set to a valid PDF renderer. Currently, the only supported value for this setting is @prince@.
]
ref_error[The current directory is not a valid Glyph project|
Returned if a glyph command was executed outside a valid glyph project directory.
]
ref_error[Invalid snippet file|
The @snippet.yml@ file contains invalid data. Most likely, it does not evaluate to a Ruby @Hash@.
]
ref_error[Directory '_directory-name_' is not empty|
Returned when executing the #>[init] in a directory that is not empty.
]
ref_error[File '_file-name_' already exists|
Returned if the name of an existing file was specified as a parameter for the #>[add].
]
]
] --[End Generic Errors]



section[header[Command Errors]

error_table[

ref_error[Source file '_source-file_' does not exist|
Returned if Glyph is running in =>[#lite_mode|lite mode] and the specified source file was not found.
]

ref_error[Source and destination file are the same|
Returned if Glyph is running in =>[#lite_mode|lite mode] and you specified the same source and destination files.
]

ref_error[DirectoryWatcher is not available. Install it with: gem install directory_watcher|
Returned if =>[#auto_regeneration|auto regeneration] is enabled but the @directory_watcher@ gem in not installed.
]

ref_error[Document cannot be finalized due to previous errors|
Returned if one or more errors occurred in the document prevented finalization.
]

ref_error[Please specify a file name|
No file name was specified for the #>[add].
]

ref_error[Output target not specified|
Returned if no target was specified for the #>[compile] _and_ if the $>[document.output] is not set.
]

ref_error[Unknown output target '_target-name_'|
An unsupported output target was specified for the #>[compile]. Only the following output targets are supported:
- @html@
- @pdf@
]

ref_error[Too few/too many arguments|
Returned if the #>[config] was used with no arguments or more than two arguments respectively.
]

ref_error[Unknown setting '_setting-name_'|
The name of an unknown setting was specified for the #>[config].
]
]
] --[End Command Errors]



section[header[Macro Errors]

The following errors are displayed in the form:

_message_
-> source: _macro-source_
-> path: _macro-path_ 
-> value: _macro-value_

Where:
* _message_ is the error message.
* _macro-source_ is the file or snippet where the error occurred.
* _macro-path_ is the full path to the macro that returned the error, within the document syntax tree, e.g. @document/body/bodymatter/chapter/section/header/&@ if the error occurrent in a snippet within the header of a section in the @bodymatter@ part of the document.
* _macro-value_ is the value of the macro (shown only if Glyph is running in =>[#debug_switch|debug mode]).

error_table[

ref_error[Macro '_name_' takes up to _x_ parameter(s) (_y_ given)|
Returned if the macro was called with extra parameters.
]

ref_error[Macro '_name_' takes at least _x_ parameter(s) (_y_ given)|
Returned if the macro was called with fewer parameters than expected.
]

ref_error[Macro '_name_' takes exactly _x_ parameter(s) (_y_ given)|
Returned if the macro was called with a different number of parameters than.
]

ref_error[Macro not available when compiling a single file.|
Returned by the %>[include] if used in =>[#lite_mode|lite mode].
]

ref_error[Filter macro '_extension_' not available|
Returned by a filter macro if $>[filters.by_file_extension] is set to @true@, but the extension was not recognized.
]

ref_error[Invalid regular expression: _regexp_|
Returned by the %>[match] macro if an invalid regular expression was supplied.
]

ref_error[Macro '_name_' takes no parameters (_x_ given)|
Returned if the macro was called with parameters but none are requested.
]

ref_error[No highlighter installed. Please run: gem install coderay|
Returned by the %>[highlight] macro if no highlighters are installed.
]

ref_error[CodeRay highlighter not installed. Please run: gem install coderay|
Returned by the %>[highlight] macro if $>[highlighters.current] is set to @coderay@ but &[coderay] is not installed.
]

ref_error[UltraViolet highlighter not installed. Please run: gem install ultraviolet|
Returned by the %>[highlight] macro if $>[highlighters.current] is set to @ultraviolet@ but &[uv] is not installed.
]

ref_error[Mutual inclusion|
Returned if a catch-22 situation occurs with macro inclusion, for example if the body of a snippet includes a reference to the same snippet.
]
ref_error[Snippet '_snippet-id_' does not exist|
Returned by the %>[snippet] if an invalid snippet was supplied.
]
ref_error[File '_file-name_' not found|
Returned by the %>[include] if an invalid file was supplied.
]
ref_error[Filter macro '_macro-name_' not found|
Returned by the %>[include] macro if the $>[filters.by_file_extension] is set to @true@ but the file extension of the included file is not recognized as a filter macro.
]
ref_error[RedCloth gem not installed. Please run: gem insall RedCloth|
Returned by the %>[textile] if the RedCloth gem is not installed.
]
ref_error[No MarkDown converter installed. Please run: gem insall bluecloth|
Returned by the %>[markdown] if no valid Markdown converter gem is installed. 

Glyph checks for: BlueCloth, Maruku, Kramdown and RDiscount.
]
ref_error[Image/Figure not found|
Retured by the %>[img] or the %>[fig] respectively, if the specified image file could not be found within the @images/@ folder.
]
ref_error[Bookmark '_bookmark-name_' already exists|
Returned by the %>[anchor] or by the %>[header] if the anchor ID supplied as parameter has already been used in the document.
]
ref_error[Bookmark '_bookmark-name_' already exists|
Returned by the %>[link] if the anchor ID supplied as parameter has not been used in the document.
]
ref_error[Stylesheet '_file-name_' not found|
Returned by the %>[style] if the @.css@ or @.sass@ file supplied as parameter was not found in the @styles/@ directory.
]
ref_error[Haml is not installed. Please run: gem install haml|
Returned by the %>[style] if a @.sass@ file was passed as parameter but the Haml gem is not installed.
]
]
] --[End Macro Errors]
